"Definiciones de los tipos de raiz lista de tipos User registrados en a la BD - la admiración tras el tipo significa que es obligatorio - la admiracion del final significa que no sea nulo"
type query
{
    Users: [User!]!
}


"""
Vamos a especificar la información detallada del usuario.
Las fechas irán en formato ISO
Si la pass == null, el usuario deberá cambiarla cuando acceda por primera vez
"""
type User{
    "Identificador único dado por Mongo"
    id: ID!
    "Identificador único para registro en APP"
    email: String!
    "Datos del usuario"
    nombre: String!
    apellidos:  String!
    "Usuario que se usará par los comentarios"
    usuario: String!
    "password"
    pass: String!
    "foto de perfil del usuario"
    foto: String
    "Nacionalidad para situar las recetas"
    nacionalidad: String
    "Tipo de perfil: ADMIN / USER"
    perfil: Perfil!
    "Fecha en la que se dió de alta el usuario"
    alta: String!
    "Fecha en la que se dió de alta el usuario"
    ultimoLogin: String!
    "Estado del usuario"
    activo: Boolean!
}

"Acciones de escritura"
type Mutation{
    register(User: UserInput!): User
}

"Tipos de perfiles permitidos"
enum Perfil
{
    ADMIN
    COOKER
    USER
}

input UserInput
{
    id:ID
    email: String!
    nombre: String!
    apellidos:  String!
    usuario: String!
    pass: String!
    foto: String
    nacionalidad: String
    perfil: Perfil=USER
    activo: Boolean=true

}