"""Definiciones de los tipos de raiz lista de tipos Usuarios registrados en a la BD 
   la admiración tras el tipo significa que es obligatorio - la admiracion del final 
   significa que no sea nulo"""
type Query
{
    Usuarios: [Usuario!]!
    # TipoIngredientes: [TipoIngrediente!]!
    # Ingredientes: [Ingrediente!]!
}

"""
Vamos a especificar la información detallada del usuario.
Las fechas irán en formato ISO
Si la pass == null, el usuario deberá cambiarla cuando acceda por primera vez
"""
type Usuario{
    "Identificador único dado por Mongo"
    id: ID!
    "Identificador único para registro en APP"
    email: String!
    "Datos del usuario"
    nombre: String!
    apellidos:  String!
    "Usuario que se usará par los comentarios"
    usuario: String!
    "password"
    pass: String! 
    "foto de perfil del usuario"
    foto: String
    "Nacionalidad para situar las recetas"
    nacionalidad: String
    "Tipo de perfil: ADMIN / USER"
    perfil: Perfil!
    "Fecha en la que se dió de alta el usuario"
    fechaAlta: String!
    "Fecha en la que se dió de alta el usuario"
    ultimoLogin: String!
    "Estado del usuario"
    activo: Boolean!
}

# type TipoIngrediente
# {
#     "Nombre del ingrediente"
#     nombre: [String!]!
#     "Información acerca del ingrediente"
#     descripcion:  String
#     "foto del ingrediente"
#     foto: String
#     "Calorias"
#     calorias: String
#     "Nutriscore"
#     nutriscore: Int
#     "Fecha en la que se dió de alta el ingrediente"
#     fechaAlta: [String!]!
#     "Usuario que dió de alta el ingrediente"
#     usuarioAlta: [String!]!
#     "Usuario que modificó el ingrediente"
#     usuarioModificacion: [String!]!
# }

# "Los ingredientes son necesario cumplimentarlos completamente"
# type Ingrediente
# {
#     idReceta: [Int!]!
#     cantidad: [String!]!
#     ingrediente: [TipoIngrediente!]!
# }

"Acciones de escritura"
type Mutation{
    # Nombre de la variable, Campos que vamos a necesitar...!) Tipo de dato
    register(User: UserInput!): Usuario,
    # register(IngredientType: TipoIngredienteInput!): TipoIngrediente,
    # register(Ingredient: IngredienteInput!): Ingrediente,
}

"Tipos de perfiles permitidos"
enum Perfil
{
    ADMIN
    COOKER
    USER
}

input UserInput
{
    email: String!
    nombre: String!
    apellidos:  String!
    usuario: String!
    pass: String!
    foto: String
    nacionalidad: String
    perfil: Perfil=USER
    activo: Boolean=true

}

# input TipoIngredienteInput
# {
#     nombre: [String!]!
#     descripcion:  String
#     foto: String
#     calorias: String
#     nutriscore: Int
# }

# input IngredienteInput
# {
#     idReceta: [Int!]!
#     cantidad: [String!]!
#     ingrediente: [TipoIngrediente!]!
# }
