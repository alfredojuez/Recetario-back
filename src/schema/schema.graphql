"""Definiciones de los tipos de raiz lista de tipos Usuarios registrados en a la BD 
   la admiración tras el tipo significa que es obligatorio - la admiracion del final 
   significa que no sea nulo"""
type Query
{
    "Lista de usuarios registrados en la base de datos"
    ListadoUsuarios: ResultUsuarios
    "Para iniciar sesión"
    login(email:String!, pass: String!): ResultLogin
    "Autenticarnos mediante token"
    me: ResultUsuario
}

"""
Vamos a especificar la información detallada del usuario.
Las fechas irán en formato ISO
Si la pass == null, el usuario deberá cambiarla cuando acceda por primera vez
"""
type Usuario{
    "Identificador único dado por Mongo"
    id: ID!
    "Identificador único para registro en APP"
    email: String!
    "Datos del usuario"
    nombre: String!
    apellidos:  String!
    "Usuario que se usará par los comentarios"
    usuario: String!
    "password"
    pass: String! 
    "foto de perfil del usuario"
    foto: String
    "Nacionalidad para situar las recetas"
    nacionalidad: String
    "Tipo de perfil: ADMIN / USER"
    perfil: Perfil!
    "Fecha en la que se dió de alta el usuario"
    fechaAlta: String!
    "Fecha en la que se dió de alta el usuario"
    ultimoLogin: String!
    "Estado del usuario"
    activo: Boolean!
}


"Acciones de escritura"
type Mutation{
    # Nombre de la variable, Campos que vamos a necesitar...!) Tipo de dato
    register(RegistroBD: UserInput!): ResultUsuario,
}

interface Result
{
     status: Boolean!
     message: String!
}

type ResultUsuario implements Result
{
    "Estado de la operacion"
    status: Boolean!
    "mensaje de la operacion para dar feedback"
    message: String!
    "Información del usuario"
    Usuario: Usuario
}

type ResultUsuarios implements Result
{
    "Estado de la operacion"
    status: Boolean!
    "mensaje de la operacion para dar feedback"
    message: String!
    "Lista de usuarios registrados en la app"
    Usuarios: [Usuario!]!
}

type ResultLogin implements Result
{
    "Estado de la operacion"
    status: Boolean!
    "mensaje de la operacion para dar feedback"
    message: String!
    "informacion del token del usuario"
    token:String
}


"Tipos de perfiles permitidos"
enum Perfil
{
    ADMIN
    COOKER
    USER
}

input UserInput
{
    email: String!
    nombre: String!
    apellidos:  String!
    usuario: String!
    pass: String!
    foto: String
    nacionalidad: String
    perfil: Perfil=USER
    activo: Boolean=true
}